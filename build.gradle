plugins {
    id "com.commercehub.gradle.plugin.avro" version "0.3.4"
}

apply plugin: 'scala'
apply plugin: 'idea'

repositories {
    mavenLocal()
    mavenCentral()
}

def scalaVersion = "2.10"

dependencies {
    compile 'org.twitter4j:twitter4j-stream:4.0.2'

    compile 'com.typesafe:config:1.2.1'
    

    compile "org.apache.spark:spark-streaming_${scalaVersion}:1.2.0"
    compile "org.apache.spark:spark-streaming-kafka_${scalaVersion}:1.2.0"

    compile 'org.apache.avro:avro:1.7.7'
    compile "com.twitter:bijection-core_${scalaVersion}:0.7.2"
    compile "com.twitter:bijection-avro_${scalaVersion}:0.7.2"
    compile "org.apache.spark:spark-sql_${scalaVersion}:1.2.0"
  
    
    compile "org.mongodb:bson:3.0.3"
    compile "org.mongodb.mongo-hadoop:mongo-hadoop-core:1.5.2"
    compile "edu.stanford.nlp:stanford-corenlp:3.5.2"
    compile "org.mongodb:casbah-core_2.9.1:3.0.0-M2"
    compile "org.mongodb:mongo-java-driver:3.0.3"
    compile fileTree(dir:'stanford', include: ['*.jar'])
    
    
}


task produce(type: JavaExec, dependsOn: classes) {
    main = 'net.mkrcah.KafkaProducerApp'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

task consume(type: JavaExec, dependsOn: classes) {
    main = 'net.mkrcah.KafkaConsumerApp'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}



// enable fast scala compiler
compileScala {
    scalaCompileOptions.useCompileDaemon = true
}

// enable incremental scala compilation
tasks.withType(ScalaCompile) {
    scalaCompileOptions.useAnt = false
}

